\documentclass{beamer}

\usepackage{tikz}

\def\mark#1{$^\text{#1}$}
\def\marktext#1#2{\mark{#1}#2}

\begin{document}

\begin{frame}{Infinite-state liveness-to-safety via implicit abstraction and well-founded relations}
Jakub Daniel\mark{1}\mark{2},
Alessandro Cimatti\mark{1},
Alberto Griggio\mark{1},
Stefano Tonetta\mark{1},
Sergio Mover\mark{3}
\vfill
\marktext{1}{FBK} \marktext{2}{CUNI} \marktext{3}{BOULDER}
\end{frame}




\begin{frame}{Background}
\end{frame}




\begin{frame}{Model-checking LTL properties}
Ranking, Automata, but also SAT-based

convert arbitrary LTL to $\mathbf{FG}\neg f$
\end{frame}




\begin{frame}{Model-checking LTL properties of symbolic finite-state TS}
Generic symbolic transition systems

$$
\def\descsep{\rule{0pt}{1.4em}}
\langle \underset{\text{\color{green!40!black}\descsep variables}}{X}, \underset{\text{\color{blue!50!black}\descsep initial}}{I}, \underset{\text{\color{orange!50!black}\descsep transition}}{T} \rangle
$$

Example

$$
\ldots
$$

\vfill

\hrule

\begin{center}
Let's focus on SAT-based techniques
\end{center}
\end{frame}




\begin{frame}{L2S}
$$
\def\descsep{\rule{0pt}{1.4em}}
\langle \underset{\text{\color{green!40!black}\descsep variables}}{X}, \underset{\text{\color{blue!50!black}\descsep initial}}{I}, \underset{\text{\color{orange!50!black}\descsep transition}}{T} \rangle
$$
enhanced to
$$
    \langle {\color{green!40!black}X_{L2S}}, {\color{blue!50!black}I_{L2S}}, {\color{orange!50!black}T_{L2S}} \rangle
$$
where

\begin{minipage}{8cm}
\begin{itemize}
\item initially non-det choice of values $\overline{X}$ of ${\color{green!40!black}X}$
\end{itemize}
\end{minipage}
(${\color{blue!50!black}I_{L2S}}$)

\vskip1em

\begin{minipage}{8cm}
\begin{itemize}
\item remember when ${\color{green!40!black}X} = \overline{X}$ reached $1^{st}$ time
\item wait for $f$ to occur
\item close loop when ${\color{green!40!black}X} = \overline{X}$ reached $2^{nd}$ time
\end{itemize}
\end{minipage}
(${\color{orange!50!black}T_{L2S}}$)

\begin{center}
there is loop iff $\mathbf{GF}f$ hence safety property $\neg loop$ proves $\mathbf{FG} \neg f$
\end{center}
\end{frame}




\begin{frame}{L2S}
\begin{center}
\begin{tikzpicture}[->, >=stealth, every node/.style={circle, draw, minimum size=0.75cm}]
\foreach \x in {1, 2, 4, 6}
    \node<\x-> (P-\x) at (1.5 * \x,0) {};
\foreach \x in {3, 7}
    \node<\x->[fill=green!40!black,label={above:${\color{green!40!black}X} = \overline{X}$}] (P-\x) at (1.5 * \x,0) {};
\foreach \x in {5}
    \node<\x-> (P-\x) at (1.5 * \x,0) {$f$};
\foreach \from/\to in {1/2, 2/3, 3/4, 4/5, 5/6, 6/7}
    \draw<\to-> (P-\from) -- (P-\to);
\path<8-> (P-3) edge[<->,bend right=60] node[draw=none,label={below:$\mathbf{GF}f$}] {} (P-7);
\clip (1.5, -3) rectangle (12, 2);
\end{tikzpicture}
\end{center}
\end{frame}




\begin{frame}{k-liveness}
$f$ is visited at most $k$ times, then $\mathbf{FG}\neg f$

sequence of checks $k = 1, 2, \ldots$

\begin{itemize}
\item initialize $counter$ to $0$
\item increase $counter$ whenever $f$ becomes satisfied
\item keep $counter$ unchanged when $\neg f$ is satisfied
\item safety property $counter < k$
\item for large enough $k$, repeated state closes loop containing $f$
\end{itemize}
\end{frame}




\begin{frame}{Infinite-state case}
$$
\def\descsep{\rule{0pt}{1.4em}}
\langle \underset{\text{\color{green!40!black}\descsep variables}}{X}, \underset{\text{\color{blue!50!black}\descsep initial}}{I}, \underset{\text{\color{orange!50!black}\descsep transition}}{T} \rangle
$$

Example

$$
\langle {\color{green!40!black}\left\{ x \right\}}, {\color{blue!50!black}\big[x = 0\big]}, {\color{orange!50!black} \big[x' = x\big] \lor \big[x < 10 \land x' = x + 1\big]} \rangle
$$

Property 1

$$
    \models \mathbf{G} (x \le 10)
$$

Property 2

$$
    \not\models \mathbf{F} (x = 10)
$$
\end{frame}




\begin{frame}{Infinite-state case}
Direct extension to infinite-state
\begin{itemize}
\item L2S unsound
\begin{itemize}
\item theory variables $X$ over infinite domain
\item $\mathbf{GF}f$ path may not be looping
\end{itemize}
\item k-liveness sound but not complete
\end{itemize}
\end{frame}




\begin{frame}{L2S with Predicate Abstraction}
\begin{itemize}
\item sound again by use of Predicate Abstraction
\begin{itemize}
\item fixed set of abstraction predicates $P$
\item initially guess valuation of predicates ${\color{green!40!black}\overline{P}}$
\item search for repeated abstract state (where $P(X) = {\color{green!40!black}\overline{P}}$)
\end{itemize}
\item CEGAR loop to battle spurious counterexamples
\begin{itemize}
\item counterexamples may be spurious despite all finite prefixes being feasible
\end{itemize}
\item finite number of predicates not enough to prove safety
\end{itemize}
\end{frame}




\begin{frame}{Contribution}
\end{frame}




\begin{frame}{L2S with Implicit Abstraction}
\begin{itemize}
\item implicit abstraction (avoid explosion)
\item check sequence of finer and finer systems
\item at anypoint safe means $\mathbf{FG}\neg f$ holds
\item finite counterexample analyzed
\begin{itemize}
\item concrete loop by BMC
\item but concrete counterexample need not be looping
\item infeasible due to unrollings (may diverge / timeout)
\end{itemize}
\end{itemize}
\end{frame}




\begin{frame}{L2S with Implicit Abstraction and Well-founded Relations}
\begin{itemize}
\item Well-founded relations (disjunctively, to show finitness of possible loop unrollings)
\item Describe from the point of view of Theorem 2?
\item Counterexamples in addition analyzed based on farkas lemma (in our implementation)
\end{itemize}
\end{frame}




\begin{frame}{Evaluation}
\begin{itemize}
\item implemented via IC3
\item compared with state-of-the-art tools (HSF, Ultimate-LTL, T2)
\item \ldots
\end{itemize}
\end{frame}




\begin{frame}{Conclusion \& Future}
\end{frame}

\end{document}
