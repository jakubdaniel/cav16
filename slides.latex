\documentclass[table]{beamer}

\usepackage{tikz}
\usepackage{amsmath}

\usenavigationsymbolstemplate{}

\def\mark#1{$^\text{#1}$}
\def\marktext#1#2{\mark{#1}#2}

\begin{document}

\begin{frame}{Infinite-state liveness-to-safety via implicit abstraction and well-founded relations}
Jakub Daniel\mark{1}\mark{2},
Alessandro Cimatti\mark{1},
Alberto Griggio\mark{1},
Stefano Tonetta\mark{1},
Sergio Mover\mark{3}
\vfill
\marktext{1}{FBK} \marktext{2}{CUNI} \marktext{3}{BOULDER}
\end{frame}




\def\F{\mathbf{F}}
\def\G{\mathbf{G}}
\begin{frame}{Outline}
\begin{itemize}
\item standard LTL model checking techniques for finite state
\item checking an arbitrary LTL reduced to checking $\F\G\neg f$
\item counterexample infinite path % satisfying $\G\F f$
\item need to be looping (lasso shape)
\item no longer true in infinite state case
\item direct lifting of L2S unsound, k-liveness incomplete
\item turn infinite state to finite state using abstraction
\item refute looping abstract counterexamples
%\begin{itemize}
%\item refine abstraction
%\item block infinite abstract paths
%\end{itemize}
\end{itemize}
\end{frame}




%\begin{frame}{Liveness-to-safety (L2S)}
%Idea:
%\begin{itemize}
%\item every infinite path has to loop
%\item should $\F\G \neg f$ be violated, $f$ needs to occur in some such loop
%\item otherwise all paths satisfy $\F\G \neg f$
%\item therefore, search for loop that contains $f$ (safety property)
%\item unrolling such loop gives the infinite counterexample
%\item absence of any such loop proves the property
%\end{itemize}
%\end{frame}




\begin{frame}{Liveness-to-safety (L2S)}
$$
\def\descsep{\rule{0pt}{1.4em}}
\langle \underset{\text{\color{green!40!black}\descsep variables}}{X}, \underset{\text{\color{blue!50!black}\descsep initial}}{I}, \underset{\text{\color{orange!50!black}\descsep transition}}{T} \rangle
$$
enhanced to
$$
    \langle {\color{green!40!black}X_{L2S}}, {\color{blue!50!black}I_{L2S}}, {\color{orange!50!black}T_{L2S}} \rangle
$$
where

\begin{minipage}{8cm}
\begin{itemize}
\item initially non-det choice of values $\overline{X}$ of ${\color{green!40!black}X}$
\end{itemize}
\end{minipage}
(${\color{blue!50!black}I_{L2S}}$)

\vskip1em

\begin{minipage}{8cm}
\begin{itemize}
\item remember when ${\color{green!40!black}X} = \overline{X}$ reached $1^{st}$ time
\item wait for $f$ to occur
\item close loop when ${\color{green!40!black}X} = \overline{X}$ reached $2^{nd}$ time
\end{itemize}
\end{minipage}
(${\color{orange!50!black}T_{L2S}}$)

\begin{center}
\end{center}
\end{frame}




%\begin{frame}{Liveness-to-safety (L2S)}
%\framesubtitle{Counterexample to $\mathbf{FG}\neg f$}
%\begin{center}
%\begin{tikzpicture}[->, >=stealth, every node/.style={circle, draw, minimum size=0.75cm}]
%\foreach \x in {1, 2, 4, 6}
%    \node<\x-> (P-\x) at (1.5 * \x,0) {};
%\foreach \x in {3, 7}
%    \node<\x->[fill=green!40!black,label={above:${\color{green!40!black}X} = \overline{X}$}] (P-\x) at (1.5 * \x,0) {};
%\foreach \x in {5}
%    \node<\x-> (P-\x) at (1.5 * \x,0) {$f$};
%\foreach \from/\to in {1/2, 2/3, 3/4, 4/5, 5/6, 6/7}
%    \draw<\to-> (P-\from) -- (P-\to);
%\path<8-> (P-3) edge[<->,bend right=60] node[draw=none,label={below:$\mathbf{GF}f$}] {} (P-7);
%\clip (1.5, -3) rectangle (12, 2);
%\end{tikzpicture}
%\end{center}
%\end{frame}




%\begin{frame}{Infinite-state case}
%$$
%\def\descsep{\rule{0pt}{1.4em}}
%\langle \underset{\text{\color{green!40!black}\descsep variables}}{X}, \underset{\text{\color{blue!50!black}\descsep initial}}{I}, \underset{\text{\color{orange!50!black}\descsep transition}}{T} \rangle
%$$
%
%Example
%
%$$
%\langle {\color{green!40!black}\left\{ x \right\}}, {\color{blue!50!black}\big[x = 0\big]}, {\color{orange!50!black} \big[x' = x\big] \lor \big[x < 10 \land x' = x + 1\big]} \rangle
%$$
%
%Property 1
%
%$$
%    \models \mathbf{G} (x \le 10)
%$$
%
%Property 2
%
%$$
%    \not\models \mathbf{F} (x = 10)
%$$
%\end{frame}




\begin{frame}{L2S with Implicit Predicate Abstraction}
\begin{itemize}
\item fixed set of abstraction predicates $P$
\item add propositions $\overline{P}$ to the concrete system
\item initially guess valuation of predicates $\overline{P}$ (an abstract state)
\item search for state where $P({\color{green!40!black}X}) = \overline{P}$
\item search for $f$
\item search for state where $P({\color{green!40!black}X}) = \overline{P}$
\item CEGAR
\begin{itemize}
\item concretize counterexample using BMC
\item find infeasible prefix of the infinite path
\end{itemize}
\end{itemize}
\end{frame}




\begin{frame}{L2S with Implicit Abstraction and Well-founded Relations}
\framesubtitle{Battling limitations of L2S with Implicit Abstraction}
Limitations
\begin{itemize}
\item non-lasso-shaped counterexamples % cannot be concretized
\item all finite prefixes feasible (diverge/timeout), still infeasible % thats why we need wfr
\item finite number of predicates not enough to prove safety in general
\end{itemize}
Conclusions
\begin{itemize}
\item finite unrollings are not enough
\item analyze infinite unrolling using termination argument
\end{itemize}
\end{frame}




\begin{frame}{L2S with Implicit Abstraction and Well-founded Relations}
\framesubtitle{Counterexamples}
\begin{center}
\begin{tikzpicture}[->, >=stealth, every node/.style={circle, draw, minimum size=0.75cm}]
\node (P-1) at (2, 0) {};
\node (P-2) at (4, 0) {};
\node (P-3) at (6, 0) {};
\node (P-4) at (6 + 2 * sin 60, -2 * cos 60) {};
\node (P-5) at (6 + 2 * sin 60,  2 * cos 60) {};
\draw (P-1) -- (P-2);
\draw (P-2) -- (P-3);
\draw (P-3) to[bend right=40] node[draw=none,label={[label distance=-0.5ex]240:$x \le 10$}] {} (P-4);
\draw (P-4) to[bend right=40] node[draw=none,label={right:$f'$}] {} (P-5);
\draw (P-5) to[bend right=40] node[draw=none,label={[label distance=-0.5ex]120:$x' = x + 1$}] {} (P-3);
\end{tikzpicture}
\end{center}
\begin{itemize}
\item ranking function $r(x) \stackrel{\text{\tiny def}}{=} 10 - x$
\item lower bound $0$
\item well-founded relation $\Phi(X, X') \stackrel{\text{\tiny def}}{=} 0 \le r(x') < r(x)$
%\item shows infeasibility of infinite unrolling of the loop
\end{itemize}
\end{frame}




\begin{frame}{L2S with Implicit Abstraction and Well-founded Relations}
\framesubtitle{Extending L2S with Implicit Abstraction}
\begin{itemize}
\item keep abstract loop detection of L2S
\item maintain a copy of theory variables $\overline{X}$
\item parametrised by well-founded relations $\Phi_i$ over ${\color{green!40!black}X}$ and $\overline{X}$
\end{itemize}
\vskip1em
\begin{itemize}
\item after entering abstract loop
\item on some occurrence of $f$ (non-det): $\overline{X} \gets {\color{green!40!black}X}$
\item on all subsequent occurrences of $f$ check $\bigvee \Phi_i({\color{green!40!black}X}, \overline{X})$
\item loop $\rightarrow$ check never failed
\end{itemize}
\end{frame}




\begin{frame}{Abstract Counterexamples}
\begin{itemize}
\item concretizing by BMC
%\begin{itemize}
%\item try concretizing the exact lasso by searching for model of
%$$
%I \land s_0 \land T \land \ldots \land \Big[ s_l^l \land T^l \land \ldots \land s_k^k \Big] \land X_l = X_k
%$$
%with $s_i$ being abstract state visited by lasso at time $i$
%
%\item bounded model checking
%\item non-lasso concrete counterexamples will not be recognized % leading to unknown/divergence
%\end{itemize}
\item refuting
\begin{itemize}
\item some finite prefix of infinite unrolling
$$
\begin{array}{l}
I \land s_0 \land T \land \ldots \Big[ s_l^l \land T^l \land \ldots s_k^k \Big] \\
I \land s_0 \land T \land \ldots \Big[ s_l^l \land T^l \land \ldots s_k^k \Big] \land \Big[ s_l^{k+1} \land T^{k+1} \land \ldots s_k^{2k} \Big] \\
\ldots
\end{array}
$$
\item interpolants refine predicate abstraction
\item infinite unrolling
\begin{itemize}
\item apply termination argument: Farkas' lemma
\item enumerate fixed simple paths through the loop
\item no disjunctions
\item ranking function $\rightarrow$ well-founded relation
\end{itemize}
\item non-periodic infinite paths are not analyzed
\end{itemize}
\end{itemize}
\end{frame}




%\begin{frame}{Refinement}
%\begin{itemize}
%\item interpolants from infeasibility of prefixes
%\item searching for loops in finer state space
%\item well-founded relation from termination argument
%\item from ranking functions $r(X)$ with lower bound $0$
%\item well-founded by construction
%$$
%0 \le r(X) < r(\overline{X})
%$$
%\item adding such relation blocks the loop in question
%\item intuitively, loops are not considered counterexamples as long as they cannot be unrolled indefinitely
%\end{itemize}
%\end{frame}




%\begin{frame}{k-liveness}
%$f$ is visited at most $k$ times, then $\mathbf{FG}\neg f$
%
%sequence of checks $k = 1, 2, \ldots$
%
%\begin{itemize}
%\item initialize $counter$ to $0$
%\item increase $counter$ whenever $f$ becomes satisfied
%\item keep $counter$ unchanged when $\neg f$ is satisfied
%\item safety property $counter \le k$
%%\item for large enough $k$, repeated state closes loop containing $f$
%%\item alternatively, BMC
%\end{itemize}
%\end{frame}




\begin{frame}{k-liveness as special implicit refinement method}
\begin{itemize}
\item augment the system with a $counter$
\begin{itemize}
\item initialized to $0$
\item incremented on occurrence of $f$
\end{itemize}
\item refine using well-founded relation
$$0 \le k - counter' < k - counter $$ %\text{\rlap{$\quad^\star$}}$$
for increasing values of $k$
%\\ {\small $^\star$ it suffices to maintain only $counter' \le k$ for the largest value of $k$ as monotonicity is guaranteed}
\item fallback should both concretization and refutation fail
\item terminates upon successfully proving/falsifying the property
\item always makes progress
\end{itemize}
\end{frame}




%relwork (check reviews for points)
%\begin{frame}{Related work}
%The state-of-the-art implementations
%\begin{itemize}
%\item Ultimate-LTL
%\begin{itemize}
%\item B\"uchi automata
%\item lasso enumeration and blocking
%\item programs (control-flow graphs)
%\end{itemize}
%\item HSF
%\begin{itemize}
%\item Horn-like clauses solver
%\item search for well-founded transition invariants
%\end{itemize}
%\item T2
%\begin{itemize}
%\item two flavors: plain termination, CTL*
%\end{itemize}
%\end{itemize}
%\end{frame}




%5mins for expeval (explain how it shows that we rock)
%\begin{frame}{Evaluation}
%\begin{itemize}
%\item we used what we would like to think is a rather extensive set of benchmarks (835)
%\item extensive set of benchmarks (835)
%\begin{itemize}
%\item symbolic transition systems (556)
%\begin{itemize}
%\item BIP models, discretized real-time/hybrid systems
%\end{itemize}
%\item imperative programs (86)
%\begin{itemize}
%\item Ultimate-LTL suite, hand-crafted
%\item knowledge of CFG
%\end{itemize}
%\item termination (193)
%\begin{itemize}
%\item T2 suite
%\end{itemize}
%\end{itemize}
%\item we compared with HSF, Ultimate-LTL, T2(-CTL*)
%\end{itemize}
%\end{frame}




\def\fst{\cellcolor{orange}}
\def\snd{}
\def\trd{}
\def\for{}
\def\fif{}
\begin{frame}{Evaluation} %highlights}
Solved instances out of 835 benchmarks in 20 min per benchmark: \\
\begin{itemize}
\item HSF, Ultimate-LTL, T2(-CTL*)
\end{itemize}
\begin{center}
\begin{tabular}{lr}
L2Sia-wfr    & \fst 72\% \\
Ultimate-LTL & \snd 31\% \\
T2-CTL*      & \trd 14\% \\
HSF          & \for 12\% \\
\end{tabular}
\end{center}
\vskip1cm
Breakdown: \\
\small
\begin{center}
\begin{tabular}{lrrrrr}
                 & L2Sia-wfr & Ultimate-LTL & T2-CTL*   & HSF       & T2        \\
sym. ts    (556) & \fst 67\% & \snd 10\%    & \for  0\% & \trd  4\% &           \\
imp. progs (86)  & \fst 88\% & \snd 71\%    & \trd 42\% & \for 28\% &           \\
term.      (193) & \snd 78\% & \trd 76\%    & \for 41\% & \fif 27\% & \fst 99\% \\
\end{tabular}
\end{center}
\end{frame}




\begin{frame}{Conclusion}
\begin{itemize}
\item implemented via IC3
\item compared with state-of-the-art tools
\begin{center}
TODO url github page?
\end{center}
\item future: enhancements to concretization, refuting even more general loops
\end{itemize}
\end{frame}

\end{document}
